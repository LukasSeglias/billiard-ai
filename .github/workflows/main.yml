# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linux-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [billiard_physics]
    steps:
      - name: Check out project
        uses: actions/checkout@v2

      - name: Update ubuntu
        run: sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade

      - name: Install prerequisites for librealsense
        run: |
          sudo apt-get install git libssl-dev libusb-1.0-0-dev pkg-config libgtk-3-dev
          sudo apt-get install libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev at

      # Run CMake
      - name: Run CMake
        run: |
          cd ${{ github.workspace }}
          mkdir build
          cd build
          cmake ../ -DCMAKE_BUILD_TYPE=Release

      # Build and run billiard-capture-test
      - name: Build and run test
        run: |
          cd ${{ github.workspace }}/build/test/${{ matrix.test }}
          make
          ./${{ matrix.test }}_test

  windows-build:
    runs-on: windows-2022
    strategy:
      matrix:
        test: [ billiard_physics ]
    steps:
      - name: Check out project
        uses: actions/checkout@v2

      - name: Install ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      # Run CMake
      - name: Run CMake
        shell: cmd
        run: |
          cd ${{ github.workspace }}
          mkdir build
          cd build
          call "C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Auxiliary\Build\vcvars64.bat"
          cmake ../ -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DOpenCV_DIR="%cd%\ext\opencv\opencv" -DOpenCV_FOUND=true
        # cmake ../ -G "Visual Studio 17 2022" -DCMAKE_CONFIGURATION_TYPES=Release -DCMAKE_GENERATOR_PLATFORM=x64 -A x64

      # Build and run billiard-capture-test
      - name: Build and run test
        run: |
          cd ${{ github.workspace }}/build/test/${{ matrix.test }}
          cmake --build .
          ${{ matrix.test }}_test.exe
        # cmake --build . --config Release
